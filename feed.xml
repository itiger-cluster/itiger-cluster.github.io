<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://itiger-cluster.github.io//feed.xml" rel="self" type="application/atom+xml"/><link href="https://itiger-cluster.github.io//" rel="alternate" type="text/html" hreflang="en"/><updated>2024-10-01T02:55:59+00:00</updated><id>https://itiger-cluster.github.io//feed.xml</id><title type="html">iTiger</title><subtitle>Building an HPC to Help the Mid-South. </subtitle><entry><title type="html">How to View Your Virtual Desktop + Tips</title><link href="https://itiger-cluster.github.io//blog/2024/gui/" rel="alternate" type="text/html" title="How to View Your Virtual Desktop + Tips"/><published>2024-09-19T15:00:00+00:00</published><updated>2024-09-19T15:00:00+00:00</updated><id>https://itiger-cluster.github.io//blog/2024/gui</id><content type="html" xml:base="https://itiger-cluster.github.io//blog/2024/gui/"><![CDATA[<div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/folders-480.webp 480w,/assets/img/folders-800.webp 800w,/assets/img/folders-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/folders.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>To be able to view your virtual desktop on the HPC, install <a href="&quot;https://wiki.x2go.org/doku.php&quot;">X2go</a> and choose the version for your computer’s operating system.</p> <p>Once you open X2go, you should see the below. For “host”, enter in “bigblue.memphis.edu”. Change the bottom left option from <code class="language-plaintext highlighter-rouge">KDE</code> to <code class="language-plaintext highlighter-rouge">XFCE</code>.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/x2go-480.webp 480w,/assets/img/x2go-800.webp 800w,/assets/img/x2go-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/x2go.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>Save this, then click on the button named “New session” on the right of the below tab:</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/client2-480.webp 480w,/assets/img/client2-800.webp 800w,/assets/img/client2-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/client2.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>Enter in your credentials, and you should be set!</p> <h3>Virtual Desktop Tips</h3> <p>You have the ability to run programs and submit jobs within the virtual desktop (although this may be slower than submitting jobs from your own ssh terminal :)</p>]]></content><author><name></name></author><category term="tutorial"/><category term="getting-started"/><category term="images"/><summary type="html"><![CDATA[Prefer a GUI as opposed to the terminal? Read this!]]></summary></entry><entry><title type="html">Jupyter Notebook on the HPC</title><link href="https://itiger-cluster.github.io//blog/2024/jupyter-notebook/" rel="alternate" type="text/html" title="Jupyter Notebook on the HPC"/><published>2024-09-17T00:00:00+00:00</published><updated>2024-09-17T00:00:00+00:00</updated><id>https://itiger-cluster.github.io//blog/2024/jupyter-notebook</id><content type="html" xml:base="https://itiger-cluster.github.io//blog/2024/jupyter-notebook/"><![CDATA[<h2 id="introduction">Introduction</h2> <p>Jupyter Notebooks are often used in computational research and data science projects. Here’s how to set it up on the HPC:</p> <hr/> <h4>(Recommended) Creating a Python Virtual Environment</h4> <p>Creating a virtual environment before running a jupyter-notebook instance is recommended for module cleanliness–in addition, it is very simple to create one!</p> <p>In the terminal, type `python -m venv [your desired directory]. The picture below shows an example directory you could try:</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/create_venv-480.webp 480w,/assets/img/create_venv-800.webp 800w,/assets/img/create_venv-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/create_venv.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>Now, <code class="language-plaintext highlighter-rouge">cd</code> into your folder. You should see something like this:</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/inside_venv_folder-480.webp 480w,/assets/img/inside_venv_folder-800.webp 800w,/assets/img/inside_venv_folder-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/inside_venv_folder.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>Now, we must install the required dependencies(in this case, jupyter). In the terminal, simply run <code class="language-plaintext highlighter-rouge">pip3 install jupyter</code> to install the required modules.</p> <p>Finally, we’ll kickstart this jupyter instance through running a <code class="language-plaintext highlighter-rouge">.sh</code> file with <code class="language-plaintext highlighter-rouge">sbatch</code>. Create a new file to submit to the cluster, and make sure to include <code class="language-plaintext highlighter-rouge">~/[directory]/bin/activate</code>, as well as <code class="language-plaintext highlighter-rouge">module load python/[your_version]</code>.</p> <p>Now, type in <code class="language-plaintext highlighter-rouge">jupyter notebook</code> into the file. save it, then submit it with <code class="language-plaintext highlighter-rouge">sbatch</code>. For context, this is an example:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#!/bin/bash
#SBATCH --cpus-per-task=1
#SBATCH --mem=10G
#SBATCH --time=1-00:00:00
#SBATCH --gres=gpu:1
#SBATCH --partition=agpuq

#module load nvhpc/23.11
#module load cuda/12.3
module load python/3.12.1

. ~/pythonGPU/bin/activate

echo "*** Starting Jupyter on: "$(hostname)
jupyter notebook
</code></pre></div></div> <p>Once running, you should see a new .out file. Open it up, and you should see something like this:</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/jupyter_notebook_runs-480.webp 480w,/assets/img/jupyter_notebook_runs-800.webp 800w,/assets/img/jupyter_notebook_runs-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/jupyter_notebook_runs.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <h2 id="accessing-your-jupyter-notebook">Accessing your Jupyter Notebook</h2> <p>Now that we have the instance running, we need to be able to view it on a browser tab, since if you try to use the link on a normal browser, it will not work, since we need specialized access.</p> <p>The most convenient way to view your instances is through connecting to the cluster with X2go. To install X2go, simply download the version applicable to your device from <a href="&quot;https://wiki.x2go.org/doku.php&quot;">this link</a>. Once you do that, open up the application, and enter in the required parameters similar to the picture below. This is for the new session we will create. Make SURE to change the bottom parameter from the initial <code class="language-plaintext highlighter-rouge">KDE</code> to the <code class="language-plaintext highlighter-rouge">XFCE</code> option.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/x2go-480.webp 480w,/assets/img/x2go-800.webp 800w,/assets/img/x2go-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/x2go.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <blockquote> <p>Pro tip: Notice that the host name is <strong>bigblue1.memphis.edu</strong>, and not <strong>bigblue.memphis.edu</strong>? This is because we actually have two login nodes–and they are represented by the corresponding numbers <em>1</em> and <em>2</em>. If you wish to run both the virtual desktop session AND a terminal session at the same time, check for the last two digits after the @. If they say 01, make the host <strong>bigblue2.memphis.edu</strong>, and vice versa. This is <strong>optional</strong>, not required.</p> </blockquote> <p>Now, continue by pressing OK.</p> <p>You should see something like this, where the box on the right represents the session you want to start. Click on it.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/client2-480.webp 480w,/assets/img/client2-800.webp 800w,/assets/img/client2-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/client2.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>Now, enter in your credentials, and you should see a window open, looking like a virtual desktop.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/folders-480.webp 480w,/assets/img/folders-800.webp 800w,/assets/img/folders-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/folders.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>On the bottom bar, click on the browser option. There, a web browser should open. From there, paste the jupyter link the <code class="language-plaintext highlighter-rouge">.out</code> file gave when we submitted that batch script. From there, you should be able to see your jupyter notebook running!</p> <blockquote> <p>Don’t forget to close your jupyter notebook instance when you are done. You can do this by running <code class="language-plaintext highlighter-rouge">scancel [your job id]</code> in the terminal.</p> </blockquote> <hr/>]]></content><author><name>Mayira Sharif</name></author><category term="user-tutorials"/><summary type="html"><![CDATA[How to run a jupyter notebook instance on the HPC]]></summary></entry><entry><title type="html">Logging in with SSH Keys</title><link href="https://itiger-cluster.github.io//blog/2024/ssh/" rel="alternate" type="text/html" title="Logging in with SSH Keys"/><published>2024-04-09T00:00:00+00:00</published><updated>2024-04-09T00:00:00+00:00</updated><id>https://itiger-cluster.github.io//blog/2024/ssh</id><content type="html" xml:base="https://itiger-cluster.github.io//blog/2024/ssh/"><![CDATA[<h2 id="what-are-ssh-keys">What are SSH Keys?</h2> <p>An SSH key is essentially a form of secure identification between a server and a client(your computer, in this case). In Layman’s terms, this authentication works because data is encrypted using a client’s public key. For the data/communication between a server and client to be understood by that client, the incoming data is decrypted using the client’s unique private key. This type of authentication is more secure than password authentication, as well as more convenient.</p> <hr/> <h2 id="creating-an-ssh-key-pair">Creating an SSH Key Pair</h2> <h3>Mac &amp; Linux Users</h3> <p>To create an SSH-key pair, open your terminal and input the command <code class="language-plaintext highlighter-rouge">ssh-keygen -b 4096 -t rsa</code>. The <code class="language-plaintext highlighter-rouge">-b 4096</code> stands for the bit-size, and the <code class="language-plaintext highlighter-rouge">rsa</code> specifies the type of key created. You’ll be asked to input a passphrase–this is entirely optional, and you can just press enter to bypass this.</p> <p>Your terminal will ask you which directory to put your key-pair in. It’s best to leave it as default.</p> <p>Once you have finished the previous step, there should be two keys within the directory–one that has an ending of <code class="language-plaintext highlighter-rouge">.pub</code>–this is your public key. You will share this with the HPC. The other key is your private key–never share it to anyone or to any network.</p> <h3>Windows Users</h3> <p>There are two ways of generating a key-pair–one is through the terminal, and the other is through PuTTY key generator, which should already be installed on your computer if you connect to the HPC with PuTTY.</p> <h4><strong>Terminal</strong></h4> <p><br/> Open a Powershell terminal with administrator privileges. In there, enter the instructions <code class="language-plaintext highlighter-rouge">ssh-keygen -t (key type of your choice)</code>. Note that <code class="language-plaintext highlighter-rouge">ssh-keygen.exe</code> can generate keys with the DSA, RSA, ECDSA, or Ed25519 algorithms. If you leave the key type blank, the terminal automatically generates an RSA key.</p> <p>There, you should see an output like this: <br/></p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  Generating public/private (key type) key pair.
  Enter file in which to save the key (C:\Users\username\.ssh\id_rsa)
</code></pre></div></div> <p>You can just enter for this–it’s best to keep the default location. After that, you’ll be requested to enter a passphrase–you can just bypass this by pressing enter twice.</p> <p>After that, you should see that your keys have been saved to the same directory. The terminal will tell you which key is your public key (the key with the <code class="language-plaintext highlighter-rouge">.pub</code> at the end).</p> <h4><strong>PuTTY</strong></h4> <p><br/> To create a public key pair with PuTTy, first open the PuTTy key generator application. It should pop up when you search for <code class="language-plaintext highlighter-rouge">puttygen</code>.</p> <p>Once you click on the application, you should be seeing this:</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/keygen-480.webp 480w,/assets/img/keygen-800.webp 800w,/assets/img/keygen-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/keygen.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p><br/></p> <p>To generate your keys, simply click on the “Generate” button. If the bar isn’t progressing, move your mouse all around the application–this should move the bar. Now, you should see this screen:</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/keygen2-480.webp 480w,/assets/img/keygen2-800.webp 800w,/assets/img/keygen2-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/keygen2.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p><br/></p> <p>Now, click on the highlighted “Conversions” tab and click “Export OpenSSH key”. This generates your private key. It is recommended to store your key in a safe directory, particularly in the default directory mentioned in the other examples in this section:</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/keygen3-480.webp 480w,/assets/img/keygen3-800.webp 800w,/assets/img/keygen3-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/keygen3.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p><br/></p> <p>Now, to generate your public key, simply copy the text and paste it all into a text file. Save that text file with the same name as your private key, with .pub added at the end.</p> <hr/> <h2 id="transferring-the-public-key-to-the-hpc">Transferring the Public Key to the HPC</h2> <h3><strong> Mac &amp; Linux Users </strong></h3> <p>The following step is rather simple–in your terminal, type in <code class="language-plaintext highlighter-rouge">ssh-copy-id -i /path/to/id_rsa.pub username@bigblue.memphis.edu</code> <br/> Replace <code class="language-plaintext highlighter-rouge">/path/to/id_rsa.pub</code> with the actual directory/directions to your public key. In addition, replace <code class="language-plaintext highlighter-rouge">username</code> with your username.</p> <h3><strong>Windows Users </strong></h3> <p>Now that you have copied your public key information, you can open up WinSCP and head to your home directory (should be the first directory you’re in). We need to go into the .ssh folder of your home directory, which may be hidden–to find it, simply click on “Find Files” and, in the bar labeled “File Mask”, put in “authorized_keys.” Make sure you’re in the right directory (highlighted). Click <code class="language-plaintext highlighter-rouge">Start</code>. You should see three files–an id_rsa file, an id_rsa.pub file, and an authorized_keys file. Click on the authorized keys file.</p> <p><br/></p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/keygen4-480.webp 480w,/assets/img/keygen4-800.webp 800w,/assets/img/keygen4-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/keygen4.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p><br/></p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/keygen5-480.webp 480w,/assets/img/keygen5-800.webp 800w,/assets/img/keygen5-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/keygen5.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p><br/></p> <p>Open up a notepad/code editor of your choice. Now, you’ll see a block of text within the authorized keys file–simply go two spaces below it, and paste your public key to the authorized_keys file. Save your change.</p> <p>With that, you should now be able to login to the HPC without a password, thanks to your ssh key!</p> <p><strong>*Note that as a Windows User, you can login passwordless with SSH Keys only through your terminal at this moment. To login with your SSH Key, open your terminal and enter in <code class="language-plaintext highlighter-rouge">ssh username@bigblue.memphis.edu</code>, with the <code class="language-plaintext highlighter-rouge">username</code> replaced with your specific username.</strong></p> <hr/>]]></content><author><name>Mayira Sharif</name></author><category term="user-tutorials"/><summary type="html"><![CDATA[Using ssh keys to login to the HPC ensures passwordless logins]]></summary></entry><entry><title type="html">Submitting a Python Job with Hello World</title><link href="https://itiger-cluster.github.io//blog/2024/hello-world/" rel="alternate" type="text/html" title="Submitting a Python Job with Hello World"/><published>2024-04-04T15:00:00+00:00</published><updated>2024-04-04T15:00:00+00:00</updated><id>https://itiger-cluster.github.io//blog/2024/hello-world</id><content type="html" xml:base="https://itiger-cluster.github.io//blog/2024/hello-world/"><![CDATA[<p><strong>Let’s learn how to submit a job to the HPC!</strong></p> <p><strong>Step 1: Write your “hello world” code:</strong> <br/> To start, open up an IDE of your choice and write code that will output “Hello World” into the terminal:</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/hello_world_img1-480.webp 480w,/assets/img/hello_world_img1-800.webp 800w,/assets/img/hello_world_img1-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/hello_world_img1.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> Next, upload your file onto the HPC. Depending on your system/OS, you may have to follow different steps to put your file onto the HPC. For that, follow this [tutorial](/blog/2024/images/) <br/> <br/> Next, we must create a basic BASH file to submit to the HPC. The BASH file acts as sort of a set of instructions for the HPC, including what resources the HPC will provide, the length of the job we shall submit, the modules we will need for the job (in this case, python 3.8.7) and the file we will run ( our python file, which in this case is animal.py ). <div class="row mt-6"> <div class="col-sm mt-6 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/bash_code-480.webp 480w,/assets/img/bash_code-800.webp 800w,/assets/img/bash_code-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/bash_code.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> After we include the right instructions into our BASH file, we are now able to upload/add it to our home directory of the HPC ([link for how to transfer files to the HPC](https://itiger-cluster.github.io/blog/2024/images/)) and use the command `sbatch` to begin the job. Once the job has submitted and finished, you should recieve an output file within your directory--this contains the "hello world" output you'd typically see on your terminal: <div class="row mt-6"> <div class="col-sm mt-6 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/helloworld2-480.webp 480w,/assets/img/helloworld2-800.webp 800w,/assets/img/helloworld2-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/helloworld2.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> Open the file in a text editor, and you should see your output! <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/helloworld3-480.webp 480w,/assets/img/helloworld3-800.webp 800w,/assets/img/helloworld3-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/helloworld3.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div></div></div></div>]]></content><author><name></name></author><category term="tutorial"/><category term="getting-started"/><summary type="html"><![CDATA[Learn how to submit a job with Python]]></summary></entry><entry><title type="html">Installing A VPN</title><link href="https://itiger-cluster.github.io//blog/2024/code/" rel="alternate" type="text/html" title="Installing A VPN"/><published>2024-03-28T15:00:00+00:00</published><updated>2024-03-28T15:00:00+00:00</updated><id>https://itiger-cluster.github.io//blog/2024/code</id><content type="html" xml:base="https://itiger-cluster.github.io//blog/2024/code/"><![CDATA[<p><strong>Obtaining a VPN connection to the University of Memphis is relatively simple. Here’s how:</strong></p> <p><strong>Step 1:</strong> First, you must obtain a VPN client. The University of Memphis primarily uses Anyconnect VPN as its VPN client of choice, so head to this website in order to install the software. Make sure you download the software that corresponds to your computer’s operating system (Mac, Windows, Linux, etc.).</p> <p>The University of Memphis has various <a href="https://www.memphis.edu/umtech/solutions/movies/vpn.php">how-to videos</a> regarding installing VPNs on a variety of devices, including mobile.</p> <p>For more information regarding VPNs, you can contact the University of Memphis Service desk at 901.678.8888. If you have a UofM account, you may also send a <a href="https://memphis.topdesk.net/tas/public/ssp/content/serviceflow?unid=208655c84d544ce68361714f1b34ab4c">service request</a>.</p>]]></content><author><name></name></author><category term="tutorial"/><category term="getting-started"/><summary type="html"><![CDATA[Learn How to Install A VPN to Utilize the UofM HPC]]></summary></entry><entry><title type="html">Submitting Jobs (Slurm)</title><link href="https://itiger-cluster.github.io//blog/2024/github-metadata/" rel="alternate" type="text/html" title="Submitting Jobs (Slurm)"/><published>2024-03-28T15:00:00+00:00</published><updated>2024-03-28T15:00:00+00:00</updated><id>https://itiger-cluster.github.io//blog/2024/github-metadata</id><content type="html" xml:base="https://itiger-cluster.github.io//blog/2024/github-metadata/"><![CDATA[<p>Running jobs on HPC requires submitting your jobs to the job scheduler as either Batch (through a submission script) or Interactively. The scheduler will find the resources you requested and will execute your job on those resource when they become available.</p> <h2 id="minimum-requirements-for-slurm-scripts">Minimum Requirements for Slurm Scripts:</h2> <ul> <li>Partition (‘-partition’, ‘p’)</li> <li>CPUs, tasks, or nodes: ‘cpus-per-task’ or ‘-c’ for multiple threads/cores per node/task (pthreads/OpenMP): ‘-ntasks’ or ‘-n’ for multiple message passing tasks (MPI); ‘-nodes’ or ‘-N’ for multiple nodes (MPI)</li> <li>Time (‘-time’ or ‘-t’)</li> <li>Memory (‘mem-per-cpu’ for memory per CPU core; ‘-mem’ for memory per node) <strong>Useful options</strong></li> <li>Job name (‘-job-name’ or ‘-J’) for identification</li> <li>Output and error (‘-output’ or ‘-o’ and ‘-error’ or ‘-e’) to redirect script standard output and error (‘stdout’ and ‘stderr’)</li> <li>Generic RESource (-gres’) used for gpus, licenses, and interconnects</li> </ul> <p>Here’s an example of how your bash script should look like:</p> <div class="row mt-3"> <div class="col-sm-4 mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/bash_example-480.webp 480w,/assets/img/bash_example-800.webp 800w,/assets/img/bash_example-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/bash_example.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div>]]></content><author><name></name></author><category term="tutorial"/><summary type="html"><![CDATA[how to submit jobs]]></summary></entry><entry><title type="html">Transferring Files to the HPC</title><link href="https://itiger-cluster.github.io//blog/2024/images/" rel="alternate" type="text/html" title="Transferring Files to the HPC"/><published>2024-03-27T00:00:00+00:00</published><updated>2024-03-27T00:00:00+00:00</updated><id>https://itiger-cluster.github.io//blog/2024/images</id><content type="html" xml:base="https://itiger-cluster.github.io//blog/2024/images/"><![CDATA[<h3><bold>Windows:</bold></h3> <p>If your device operates a Windows OS, then you may download the application <a href="http://sourceforge.net/projects/winscp/">winScp</a> onto your desktop and use your login information to connect to the HPC from there. From then on, your winScp tab should look something like this, with your computer files on the left and the your home directory on the HPC on the right: <br/></p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/winscp-480.webp 480w,/assets/img/winscp-800.webp 800w,/assets/img/winscp-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/winscp.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p><br/></p> <h3><bold>Mac &amp; Linux:</bold></h3> <p>If you are utilizing a Mac or Linux OS, then you will not need to install any application–simply utilize the <code class="language-plaintext highlighter-rouge">scp</code> command on the terminal, after you have logged in to the HPC.</p>]]></content><author><name></name></author><category term="tutorials"/><category term="formatting"/><category term="images"/><summary type="html"><![CDATA[Learn how to transfer your files to the HPC on either Linux, Mac, or Windows]]></summary></entry><entry><title type="html">Creating an Account</title><link href="https://itiger-cluster.github.io//blog/2024/account/" rel="alternate" type="text/html" title="Creating an Account"/><published>2024-03-26T00:00:00+00:00</published><updated>2024-03-26T00:00:00+00:00</updated><id>https://itiger-cluster.github.io//blog/2024/account</id><content type="html" xml:base="https://itiger-cluster.github.io//blog/2024/account/"><![CDATA[<h2 id="completing-the-form">Completing the Form</h2> <p>Hello, and thank you for your interest in iTiger! To begin the process of gaining access to the iTiger HPC, you must begin with filling out the form found on the <a href="https://itiger-cluster.github.io/requests/">requests page</a>. Note that the form is different for internal and external users (in this case, “internal” means you are affiliated with the University of Memphis and “external” means you are not affiliated).</p> <p>Please wait for 3 - 5 business days to recieve a response from the University of Memphis IT department.</p> <hr/> <h2 id="setting-up-software--terminal">Setting Up Software / Terminal</h2> <p>Once you have recieved an email from IT, your next steps are to set up your device to connect to the HPC.</p> <p><strong>For External Users:</strong> If you are an external user, it is important to know that the only way to access the UofM HPC is by being connected to the University of Memphis network by VPN. Setting up this VPN is relatively simple–follow these <a href="https://www.memphis.edu/umtech/solutions/vpn.php">tutorials</a> provided by the University of Memphis.</p> <p><strong>For Windows Users:</strong> In order to access the HPC, you must download either <a href="http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html">PuTTY</a> or <a href="https://mobaxterm.mobatek.net/">mobaXterm</a>.</p> <p>Once you have installed PuTTY, execute the program, and you should see a window that looks like this: <br/></p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/configuration-480.webp 480w,/assets/img/configuration-800.webp 800w,/assets/img/configuration-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/configuration.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>For the entry titled <code class="language-plaintext highlighter-rouge">Host Name</code>, enter <code class="language-plaintext highlighter-rouge">bigblue.memphis.edu</code>. Keep the other options as default, and click on <code class="language-plaintext highlighter-rouge">Open</code>.</p> <p><br/></p> <p>From then, you’ll see a new terminal window open up. When it says <code class="language-plaintext highlighter-rouge">login as:</code>, put in your UofM username. The password it asks for next is just your password that you use to login to your UofM account.</p> <p><br/> <strong>For Linux and MacOS:</strong> You can gain access by logging in with “ssh” via the terminal or shell:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ssh [username]@hpclogin.memphis.edu
</code></pre></div></div> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ssh [username]@bigblue.memphis.edu
</code></pre></div></div> <p>In addition, X2Go works on both MacOS and Windows. Here is how to connect to the HPC:</p> <ul> <li>Host: hpclogin.memphis.edu</li> <li>Login: username[your UofM username]</li> <li>SSH Port: 22</li> <li>Session Type: XFCE</li> </ul> <p>In both cases, after you entered in your valid login information, you should see the words <strong>BIG BLUE</strong> printed onto your terminal:</p> <p><br/></p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/terminal-480.webp 480w,/assets/img/terminal-800.webp 800w,/assets/img/terminal-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/terminal.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p><br/></p> <p>You have now learned how to connect to the HPC! For next steps, including learning basic SLURM commands, click [here].</p>]]></content><author><name>Weisi Liu</name></author><category term="tutorials"/><category term="getting-started"/><summary type="html"><![CDATA[How to set up your account on the HPC]]></summary></entry></feed>